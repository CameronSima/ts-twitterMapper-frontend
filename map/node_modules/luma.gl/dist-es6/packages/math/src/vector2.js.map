{"version":3,"sources":["../../../../src/packages/math/src/vector2.js"],"names":["MathArray","checkNumber","vec2_set","vec2_add","Vector2","x","y","Array","isArray","arguments","length","copy","set","check","vectors","vector","value"],"mappings":";;;;;;;;AAAA,OAAOA,SAAP,MAAsB,cAAtB;AACA,SAAQC,WAAR,QAA0B,UAA1B;;AAEA;AACA;AACA;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,QAAP,MAAqB,aAArB;;IAEqBC,O;;;AACnB;AACA,qBAA0B;AAAA,QAAdC,CAAc,uEAAV,CAAU;AAAA,QAAPC,CAAO,uEAAH,CAAG;;AAAA;;AAAA;;AAExB,QAAIC,MAAMC,OAAN,CAAcH,CAAd,KAAoBI,UAAUC,MAAV,KAAqB,CAA7C,EAAgD;AAC9C,YAAKC,IAAL,CAAUN,CAAV;AACD,KAFD,MAEO;AACL,YAAKO,GAAL,CAASP,CAAT,EAAYC,CAAZ;AACD;AANuB;AAOzB;;;;wBAEGD,C,EAAGC,C,EAAG;AACRJ,eAAS,IAAT,EAAeG,CAAf,EAAkBC,CAAlB;AACA,WAAKO,KAAL;AACA,aAAO,IAAP;AACD;;AAED;AACA;;;;;AAMA;;0BAEgB;AAAA,wCAATC,OAAS;AAATA,eAAS;AAAA;;AAAA;AAAA;AAAA;;AAAA;AACd,6BAAqBA,OAArB,8HAA8B;AAAA,cAAnBC,MAAmB;;AAC5BZ,mBAAS,IAAT,EAAeY,MAAf;AACD;AAHa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAId,aAAO,IAAP;AACD;;;wBAZc;AAAE,aAAO,CAAP;AAAW;;;wBACf;AAAE,aAAO,KAAK,CAAL,CAAP;AAAiB,K;sBAC1BC,K,EAAO;AAAE,aAAO,KAAK,CAAL,IAAUf,YAAYe,KAAZ,CAAjB;AAAsC;;;wBACxC;AAAE,aAAO,KAAK,CAAL,CAAP;AAAiB,K;sBAC1BA,K,EAAO;AAAE,aAAO,KAAK,CAAL,IAAUf,YAAYe,KAAZ,CAAjB;AAAsC;;;;EAvBlBhB,S;;eAAhBI,O","file":"vector2.js","sourcesContent":["import MathArray from './math-array';\nimport {checkNumber} from './common';\n\n// gl-matrix is a big library. Cherry-pick individual imports from stack.gl version\n// import {vec2} from 'gl-matrix';\n/* eslint-disable camelcase */\nimport vec2_set from 'gl-vec2/set';\nimport vec2_add from 'gl-vec2/add';\n\nexport default class Vector2 extends MathArray {\n  // Creates a new, empty vec2\n  constructor(x = 0, y = 0) {\n    super();\n    if (Array.isArray(x) && arguments.length === 1) {\n      this.copy(x);\n    } else {\n      this.set(x, y);\n    }\n  }\n\n  set(x, y) {\n    vec2_set(this, x, y);\n    this.check();\n    return this;\n  }\n\n  // Getters/setters\n  /* eslint-disable no-multi-spaces, brace-style, no-return-assign */\n  get ELEMENTS() { return 2; }\n  get x()      { return this[0]; }\n  set x(value) { return this[0] = checkNumber(value); }\n  get y()      { return this[1]; }\n  set y(value) { return this[1] = checkNumber(value); }\n  /* eslint-disable no-multi-spaces, brace-style, no-return-assign */\n\n  add(...vectors) {\n    for (const vector of vectors) {\n      vec2_add(this, vector);\n    }\n    return this;\n  }\n}\n"]}